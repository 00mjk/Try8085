<?xml version='1.0' encoding='utf-8' ?><file><module id='display'>1</module><module id='indicators'>0</module><module id='keyboard'>0</module><source><![CDATA[JMP START
VIDEO = 0300h              ;инициализируем локальную переменную значением 0x300 (начало видеопамяти)
SIZE = SIZE_MASS-MASS     ;вычисляем размер строки
#ORG 002Ch                 ;инициализация обработчика прерываний от таймера
DI
EI
RET                         ;возврат из обработчика
#ORG 003Ch                 ;инициализация обработчика прерывания от клавиатуры
DI						; запрет прерываний
IN 10h                     ;в регистр А заносим код нажатой клавиши
LXI B, VIDEO                 ;устанавливаем значение регистровой пары [В,С] на начало видеопамяти
STAX B                      ;выводим символ на экран
EI						; разрешение прерываний
RET                         ;возврат из обработчика
#ORG 1000h          
START:                      ;начало выполнения программы
LXI SP,0F00h               ;инициализачия стека
MVI A, 0Ah				; инициализация таймера
OUT 91h					; на порт 91 подаем число 10 (прерывание по таймеру будет вызывать раз за 11 тактов процессора)
EI
MVI A, 00001100b          ;в регистр А заносим значание цвета дисплея
OUT 11h                    ;передаем дисплею его цвет
LXI D,MASS                  ;устанавливаем значение регистровой пары [D,E] на начало массива
LXI B,0300h                 ;устанавливаем значение регистровой пары [В,С] на начало видеопамяти
MVI L, SIZE      ;записываем в L длину строки
PRINT:                      ;метка для цикла вывода на экран строки
LDAX D                      ;получаем текущий символ (записываем его в регистр А)
STAX B                      ;выдаем его на экран (помещяем значение регистра А в видеопамять)
INR C                       ;переход к следующему адресу видеопамяти
INR E                       ;переход к следующему символу строки
DCR L                       ;уменьшаем значение счетчика
JNZ PRINT                   ;пока еще есть невыведенные символы, повторяем цикл
LOOP:
JMP LOOP                    ;бесконечный цикл для ожидания прерывания от клавиатуры

MASS:                       ;строка, выводимая на экран
db '_'
db '_'
db 'H'
db 'E'
db 'L'
db 'L'
db 'O'
db '!'
SIZE_MASS:
;метка после строки
;использование этой метки позволяет нам вичислть размер
;строки
;из конечного адреса вычитаем начальный SIZE_MASS - MAS]]></source></file>
